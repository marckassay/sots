{"version":3,"file":"StateEmission.js","sourceRoot":"","sources":["../lib/StateEmission.ts"],"names":[],"mappings":"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","sourcesContent":["import { SequenceConfigShape } from './api/Segment';\n\nexport class StateEmission implements StateEmission {\n  static seqConfig: SequenceConfigShape;\n  instant: Set<string | number>;\n  spread: Set<string | number>;\n\n  constructor(instant: Set<string | number> = new Set<string | number>(),\n    spread: Set<string | number> = new Set<string | number>()) {\n    this.instant = instant;\n    this.spread = spread;\n  }\n\n  valueOf(state?: string | number, compareAsBitwise?: boolean): boolean | number {\n    let results: boolean | number;\n    if (state !== undefined) {\n      results = (this.getStateValues(state, compareAsBitwise) > 0);\n    } else {\n      results = this.getStateValues(-1, true);\n    }\n\n    return results;\n  }\n\n  private getStateValues(state: string | number, compareAsBitwise?: boolean): number {\n    let useBitwiseCompare: boolean;\n\n    if (compareAsBitwise != undefined) {\n      useBitwiseCompare = compareAsBitwise;\n    }\n    else if (StateEmission.seqConfig.compareAsBitwise != undefined) {\n      useBitwiseCompare = StateEmission.seqConfig.compareAsBitwise;\n    }\n    else {\n      useBitwiseCompare = false;\n    }\n\n    if (useBitwiseCompare === false) {\n      // here returning numbers (1,0) and not boolean to conform to this method's return type\n      if (this.instant.has(state) === false) {\n        return (this.spread.has(state) ? 1 : 0);\n      } else {\n        return 1;\n      }\n    } else if (typeof state === 'string') {\n      throw \"valueOf() has been called with a string and flagged to use bitwise comparisons.\"\n    } else {\n      let total: number = 0;\n      this.instant.forEach((value: string | number) => {\n        if (typeof value === 'number') {\n          total += value;\n        }\n      }, total);\n\n      this.spread.forEach((value: string | number) => {\n        if (typeof value === 'number') {\n          total += value;\n        }\n      }, total);\n\n      if (state === -1) {\n        return total;\n      } else {\n        return ((total & state) === state) ? 1 : -1;\n      }\n    }\n  }\n}\n"]}