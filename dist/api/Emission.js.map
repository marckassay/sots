{"version":3,"file":"Emission.js","sourceRoot":"","sources":["../../lib/api/Emission.ts"],"names":[],"mappings":"","sourcesContent":["export interface TimeEmission {\r\n    time: number;\r\n    state?: SlotEmissionShape;\r\n    interval?: IntervalEmissionShape;\r\n}\r\n\r\nexport interface IntervalEmissionShape {\r\n    current: number;\r\n    total: number;\r\n}\r\n\r\n/**\r\n * Used internally by StateExpression for the\r\n * type to be used for its storage. key is the\r\n * time of an state (SlotEmissionShape)\r\n */\r\nexport interface TimeSlot<T> {\r\n    [key: number]: T;\r\n}\r\n\r\n/**\r\n * Used internally by StateExpression as a generic\r\n * type variable for TimeSlot. instant and spread\r\n * property are assigned the state (e.g, 'beep', 4)\r\n */\r\nexport interface SlotEmissionShape {\r\n    instant: Array<string | number>;\r\n    spread: Array<string | number>;\r\n}"]}